clear;
tic
%загрузка весов из файла input1.csv, лежать должен в той же папке, что и
%программа
weights = readmatrix('input1.csv','NumHeaderLines',28);
%загрузка матрицы
data = readmatrix('input1.csv','Range',[1 1 28 28]);
[r,l] = size(data);
%доп переменные:
%flag - включение или нет траектории, изначально 1 (да), потом могут
%меняться на 0, если по матрице совместимости траектория не подходит, либо
%при рассмотрении новой гипотезы
flag = ones(1,l);
%i - количество рассматриваемых гипотез
i = 1;
%count - изначально 0, обозначение значимых траекторий. Значимой траектория
%становится (1), если изменяет набор флагов при проверке в таблице
%соответствия, т.е. запрещает включать другую траекторию в гипотезу.
%При выборе новых гипотез меняются только значимые траектории (выбирается 1
%значимая траектория с конца, ее значение в новой гипотезе становится равно
%0, также как и count.
count = zeros(1,l);
%цикл рассмотрения гипотез, изначально все флаги 1, т.е. пытаемся включить
%все траектории в гипотезу. Но из-за таблицы совместимости некоторые
%траектории отбрасываются, выделяя значимые траектории
%(1 часть цикла - проверка каждой траектории на исключение других слева направо
% 2 часть - гипотеза сформулирована, переход к новой, обнулением самой правой значимой гипотезы)
while sum(flag)
    
    for j = 1:l
        if flag(j) && j ~= l
            for f = j+1:l
                if ~data(j,f)
                    if data(j,f) ~= flag(f)
                        count(j) = 1;
                    end
                    flag(f) = 0;
                end
            end
        end
        M(i,j) = flag(j);
        if i > 1 
            if all(M(i-1,:) == M(i,:))
                flag = zeros(1,l);
            end
        end
    end
    for fk = l:-1:1
        if flag(fk) && count(fk)
            flag(fk) = 0;
            count(fk) = 0;
            if fk ~= l
                for fr = fk+1:l
                    flag(fr) = 1;
                end
            end
            break
        end
    end
    i = i + 1;
end
%колдуем с выводом, совмещаем матрицы, веса и сортируем все
sum_w = sum(M(1:length(M)-1,:) .* weights, 2);
result = M(1:length(M)-1,:);
result(:,l+1) = sum_w;
res = sortrows(result, l+1, 'descend');
writematrix(res(1:5,:), 'out1.csv');
toc
%вся работа программы порядка 0.1-0.2сек, вывод будет после работы.
%Результат - файл out1.csv.